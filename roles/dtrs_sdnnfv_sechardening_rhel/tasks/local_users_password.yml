---
- name: Including variables
  include_vars:
    file: vars/local_users_password.yml

- name: "Configuration of login.defs"
  lineinfile:
    dest: "{{ login_defs_file }}"
    regexp: '(?i)^(\s*){{ item.keyword }}(.*)'
    line: "{{ item.keyword }} {{ item.argument }}"
    create: false
    state: present
  loop: "{{ local_users_login_defs_dict }}"
  loop_control:
    label: "{{ item.keyword }}  {{ item.argument }}"


- name: "Configuration of pwquality.conf"
  lineinfile:
    dest: "{{ pwquality_file }}"
    regexp: '(?i)^(\s*){{ item.keyword }}(.*)'
    line: "{{ item.keyword }} = {{ item.argument }}"
    create: false
    state: present
  loop: "{{ pwquality_dict }}"
  loop_control:
    label: "{{ item.keyword }}  {{ item.argument }}"

- name: Use pwquality when passwords are changed or created
  lineinfile:
    dest: /etc/pam.d/passwd
    line: "password required pam_pwquality.so retry=3"
    state: present

- name: Ensure libuser is storing passwords using SHA512
  ini_file:
    dest: /etc/libuser.conf
    section: defaults
    option: crypt_style
    value: sha512
    backup: yes

- name: Get all accounts with UID 0
  shell: "awk -F: '$3 == 0 {print $1}' /etc/passwd"
  changed_when: False
  check_mode: no
  register: root_user_check

- name: Print warnings for non-root users with UID 0
  fail:
    msg: |
      Only the 'root' user should have UID 0. Other users were found:
      "{{ root_user_check.stdout_lines | join(', ') }}"
  when:
    - root_user_check.stdout != 'root'

#le control [success=done ignore=ignore default=die] correspond à ce que j'ai vu sur un rhel de maquette... à voir si c'est toujours comme ça par défaut
- name: Locking out accounts after a number of incorrect attempts (system-auth 1/3)
  pamd:
    name: system-auth
    type: auth
    control: '[success=done ignore=ignore default=die]'
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: 'preauth silent deny=5 unlock_time=900 fail_interval=100000000'
    state: before

- name: Locking out accounts after a number of incorrect attempts (system-auth 2/3)
  pamd:
    name: system-auth
    type: auth
    control: '[success=done ignore=ignore default=die]'
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: 'authfail deny=5 unlock_time=900 fail_interval=100000000'
    state: after

- name: Locking out accounts after a number of incorrect attempts (system-auth 3/3)
  pamd:
    name: system-auth
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before

- name: Locking out accounts after a number of incorrect attempts (password-auth 1/3)
  pamd:
    name: password-auth
    type: auth
    control: '[success=done ignore=ignore default=die]'
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: 'preauth silent deny=5 unlock_time=900 fail_interval=100000000'
    state: before

- name: Locking out accounts after a number of incorrect attempts (password-auth 2/3)
  pamd:
    name: password-auth
    type: auth
    control: '[success=done ignore=ignore default=die]'
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: 'authfail deny=5 unlock_time=900 fail_interval=100000000'
    state: after

- name: Locking out accounts after a number of incorrect attempts (password-auth 3/3)
  pamd:
    name: password-auth
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before

- name: Deny log in for users without password (system-auth 1/3)
  pamd:
    name: system-auth
    type: auth
    control: '[success=done ignore=ignore default=die]'
    module_path: pam_unix.so
    module_arguments: nullok
    state: args_absent

- name: Deny log in for users without password (system-auth 2/3)
  pamd:
    name: system-auth
    type: auth
    control: sufficient
    module_path: pam_unix.so
    module_arguments: nullok
    state: args_absent

- name: Deny log in for users without password (system-auth 2/3)
  pamd:
    name: system-auth
    type: password
    control: sufficient
    module_path: pam_unix.so
    module_arguments: nullok
    state: args_absent

- name: Deny log in for users without password (password-auth 1/3)
  pamd:
    name: password-auth
    type: auth
    control: '[success=done ignore=ignore default=die]'
    module_path: pam_unix.so
    module_arguments: nullok
    state: args_absent

- name: Deny log in for users without password (password-auth 2/3)
  pamd:
    name: password-auth
    type: auth
    control: sufficient
    module_path: pam_unix.so
    module_arguments: nullok
    state: args_absent

- name: Deny log in for users without password (password-auth 3/3)
  pamd:
    name: password-auth
    type: password
    control: sufficient
    module_path: pam_unix.so
    module_arguments: nullok
    state: args_absent